name: Tests

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.7', '3.8', '3.9']
    
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install Poetry
      uses: snok/install-poetry@v1.2.1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true
     
     #----------------------------------------------
     #       load cached venv if cache exists
     #----------------------------------------------
#    - name: Load cached venv
#      id: cached-poetry-dependencies
#      uses: actions/cache@v2
#      with:
#        path: .venv
#        key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
     
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
    - name: Install dependencies
#      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: | 
        poetry install --no-interaction --no-root
        pip install tox flake8 mypy tox-gh-actions
    - name: Run linters in tox
      run: tox
